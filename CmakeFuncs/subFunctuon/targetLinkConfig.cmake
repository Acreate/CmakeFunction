cmake_minimum_required( VERSION 3.19 )

# ## 配置指定目标的 soil2
function( set_target_link_glm_lib target_obj )
    target_include_directories( ${target_obj} PUBLIC "${CMAKE_CURRENT_FUNCTION_LIST_DIR}/../../lib/glm-1.0.1-light" )
endfunction()

# ## 配置指定目标的 soil2
function( set_target_link_soil2_lib target_obj )
    target_include_directories( ${target_obj} PUBLIC "${CMAKE_CURRENT_FUNCTION_LIST_DIR}/../../lib/SOIL2-1.3.0/src/" )
    target_link_libraries( ${target_obj} PUBLIC
        $<$<CONFIG:Release>:"${CMAKE_CURRENT_FUNCTION_LIST_DIR}/../../lib/SOIL2-1.3.0//lib/windows/soil2">
        $<$<CONFIG:Debug>:"${CMAKE_CURRENT_FUNCTION_LIST_DIR}/../../lib/SOIL2-1.3.0//lib/windows/soil2-debug"> )
endfunction()

# ## 配置指定目标的 glew3
function( set_target_link_glew3_lib target_obj )
    target_link_libraries( ${target_obj} PUBLIC
        "${CMAKE_CURRENT_FUNCTION_LIST_DIR}/../../lib/glew-2.2.0/lib/Release/x64/glew32.lib"
        "opengl32.lib" )
    target_include_directories( ${target_obj} PUBLIC
        "${CMAKE_CURRENT_FUNCTION_LIST_DIR}/../../lib/glew-2.2.0/include" )

    if( WIN32 )
        get_target_property( run_path ${target_obj} RUNTIME_OUTPUT_DIRECTORY )
        get_target_property( name ${target_obj} ARCHIVE_OUTPUT_NAME )
        message( "\t\t发现动态库目标路径 : " ${run_path} )
        set( dll_base_name "glew32.dll" )
        set( glew32_dll_file_path "${CMAKE_CURRENT_FUNCTION_LIST_DIR}/../../lib/glew-2.2.0/bin/Release/x64/${dll_base_name}" )
        execute_process( COMMAND ${CMAKE_COMMAND} -E make_directory ${run_path} )
        file( COPY_FILE "${glew32_dll_file_path}" "${run_path}/${dll_base_name}" )
    endif()
endfunction()

# ## 配置指定目标的 glfw3
function( set_target_link_glfw3_lib target_obj )
    target_include_directories( ${target_obj} PUBLIC
        "${CMAKE_CURRENT_FUNCTION_LIST_DIR}/../../lib/glfw-3.4.bin.WIN64/include" )
    target_link_libraries( ${target_obj} PUBLIC
        "${CMAKE_CURRENT_FUNCTION_LIST_DIR}/../../lib/glfw-3.4.bin.WIN64/lib-vc2022/glfw3.lib"
        "opengl32.lib" )
endfunction()

# ## 配置指定目标的 glut3
function( set_target_link_freeglut3_lib target_obj )
    set( root_path "${CMAKE_CURRENT_FUNCTION_LIST_DIR}/../../lib/freeglut-3.6.0/x64" )

    set( lib_base_name "freeglutd.lib" )
    target_link_libraries( ${target_obj} PUBLIC
            "${root_path}/lib/${lib_base_name}" )

    target_include_directories( ${target_obj} PUBLIC
        "${root_path}/include" )

    if( WIN32 )
        get_target_property( run_path ${target_obj} RUNTIME_OUTPUT_DIRECTORY )
        get_target_property( name ${target_obj} ARCHIVE_OUTPUT_NAME )
        message( "\t\t发现动态库目标路径 : " ${run_path} )
        set( dll_base_name "freeglutd.dll" )
        set( freeglut3_dll_file_path "${root_path}/bin/${dll_base_name}" )
        execute_process( COMMAND ${CMAKE_COMMAND} -E make_directory ${run_path} )
        file( COPY_FILE "${freeglut3_dll_file_path}" "${run_path}/${dll_base_name}" )
    endif()
endfunction()

# ## 配置指定目标的 glad
function( set_target_link_glad_lib target_obj )
    set( root_path "${CMAKE_CURRENT_FUNCTION_LIST_DIR}/../../lib/glad_noes_core" )

    target_sources( ${target_obj} PRIVATE
            "${root_path}/src/glad.c" )
    target_include_directories( ${target_obj} PUBLIC
        "${root_path}/include" )
endfunction()

# ## 配置指定目标的 opencv4110
function( set_target_link_opencv4110_lib target_obj )
    set( root_path "${CMAKE_CURRENT_FUNCTION_LIST_DIR}/../../lib/opencv-4.11.0/build" )

    if( NOT OpenCV_FOUND )
        find_package( OpenCV REQUIRED PATHS "${root_path}" REGISTRY_VIEW 64 )
    endif()

    if( OpenCV_FOUND )
        target_link_libraries( ${target_obj} PUBLIC ${OpenCV_LIBS} )
        target_include_directories( ${target_obj} PUBLIC ${OpenCV_INCLUDE_DIRS} )

        get_target_property( run_path ${target_obj} RUNTIME_OUTPUT_DIRECTORY )
        get_target_property( name ${target_obj} ARCHIVE_OUTPUT_NAME )
        message( "\t\t发现动态库目标路径 : " ${run_path} )

        set( root_path "${root_path}/x64/vc16/" )
        set( dll_base_name "opencv_world4110d.dll" )
        set( opencv4110_dll_file_path "${root_path}/bin/${dll_base_name}" )
        execute_process( COMMAND ${CMAKE_COMMAND} -E make_directory ${run_path} )
        file( COPY_FILE "${opencv4110_dll_file_path}" "${run_path}/${dll_base_name}" )

        set( dll_base_name "opencv_videoio_msmf4110_64d.dll" )
        set( opencv4110_dll_file_path "${root_path}/bin/${dll_base_name}" )
        execute_process( COMMAND ${CMAKE_COMMAND} -E make_directory ${run_path} )
        file( COPY_FILE "${opencv4110_dll_file_path}" "${run_path}/${dll_base_name}" )

        set( dll_base_name "opencv_videoio_ffmpeg4110_64.dll" )
        set( opencv4110_dll_file_path "${root_path}/bin/${dll_base_name}" )
        execute_process( COMMAND ${CMAKE_COMMAND} -E make_directory ${run_path} )
        file( COPY_FILE "${opencv4110_dll_file_path}" "${run_path}/${dll_base_name}" )
    endif()
endfunction()

# ## 配置指定目标的 glad
function( set_target_link_user_tools_lib target_obj )
    set( root_path "${CMAKE_CURRENT_FUNCTION_LIST_DIR}/../../userLib/tools" )
    get_absolute_path( absFilePath ${root_path} )
    string_splite( result_list ${absFilePath} ${cmake_sep_char} )
    list( GET result_list -3 -2 -1 resultList )
    string( JOIN " " jionResult ${resultList} )
    normal_project_name( result_name "${jionResult}" )
    target_link_libraries( ${target_obj} PUBLIC ${result_name} )
endfunction()

# # 配置模板到指定路径
function( configure_temp_files generate_file_path target_path target_obj )
    get_target_property( cmake_property_additional_clean_files ${target_obj} ADDITIONAL_CLEAN_FILES )
    get_target_property( cmake_property_aix_export_all_symbols ${target_obj} AIX_EXPORT_ALL_SYMBOLS )
    get_target_property( cmake_property_aix_shared_library_archive ${target_obj} AIX_SHARED_LIBRARY_ARCHIVE )
    get_target_property( cmake_property_alias_global ${target_obj} ALIAS_GLOBAL )
    get_target_property( cmake_property_aliased_target ${target_obj} ALIASED_TARGET )
    get_target_property( cmake_property_android_ant_additional_options ${target_obj} ANDROID_ANT_ADDITIONAL_OPTIONS )
    get_target_property( cmake_property_android_api ${target_obj} ANDROID_API )
    get_target_property( cmake_property_android_api_min ${target_obj} ANDROID_API_MIN )
    get_target_property( cmake_property_android_arch ${target_obj} ANDROID_ARCH )
    get_target_property( cmake_property_android_assets_directories ${target_obj} ANDROID_ASSETS_DIRECTORIES )
    get_target_property( cmake_property_android_gui ${target_obj} ANDROID_GUI )
    get_target_property( cmake_property_android_jar_dependencies ${target_obj} ANDROID_JAR_DEPENDENCIES )
    get_target_property( cmake_property_android_jar_directories ${target_obj} ANDROID_JAR_DIRECTORIES )
    get_target_property( cmake_property_android_java_source_dir ${target_obj} ANDROID_JAVA_SOURCE_DIR )
    get_target_property( cmake_property_android_native_lib_dependencies ${target_obj} ANDROID_NATIVE_LIB_DEPENDENCIES )
    get_target_property( cmake_property_android_native_lib_directories ${target_obj} ANDROID_NATIVE_LIB_DIRECTORIES )
    get_target_property( cmake_property_android_process_max ${target_obj} ANDROID_PROCESS_MAX )
    get_target_property( cmake_property_android_proguard ${target_obj} ANDROID_PROGUARD )
    get_target_property( cmake_property_android_proguard_config_path ${target_obj} ANDROID_PROGUARD_CONFIG_PATH )
    get_target_property( cmake_property_android_secure_props_path ${target_obj} ANDROID_SECURE_PROPS_PATH )
    get_target_property( cmake_property_android_skip_ant_step ${target_obj} ANDROID_SKIP_ANT_STEP )
    get_target_property( cmake_property_android_stl_type ${target_obj} ANDROID_STL_TYPE )
    get_target_property( cmake_property_archive_output_directory ${target_obj} ARCHIVE_OUTPUT_DIRECTORY )
    get_target_property( cmake_property_archive_output_name ${target_obj} ARCHIVE_OUTPUT_NAME )
    get_target_property( cmake_property_autogen_better_graph_multi_config ${target_obj} AUTOGEN_BETTER_GRAPH_MULTI_CONFIG )
    get_target_property( cmake_property_autogen_build_dir ${target_obj} AUTOGEN_BUILD_DIR )
    get_target_property( cmake_property_autogen_command_line_length_max ${target_obj} AUTOGEN_COMMAND_LINE_LENGTH_MAX )
    get_target_property( cmake_property_autogen_origin_depends ${target_obj} AUTOGEN_ORIGIN_DEPENDS )
    get_target_property( cmake_property_autogen_parallel ${target_obj} AUTOGEN_PARALLEL )
    get_target_property( cmake_property_autogen_target_depends ${target_obj} AUTOGEN_TARGET_DEPENDS )
    get_target_property( cmake_property_autogen_use_system_include ${target_obj} AUTOGEN_USE_SYSTEM_INCLUDE )
    get_target_property( cmake_property_automoc ${target_obj} AUTOMOC )
    get_target_property( cmake_property_automoc_compiler_predefines ${target_obj} AUTOMOC_COMPILER_PREDEFINES )
    get_target_property( cmake_property_automoc_depend_filters ${target_obj} AUTOMOC_DEPEND_FILTERS )
    get_target_property( cmake_property_automoc_executable ${target_obj} AUTOMOC_EXECUTABLE )
    get_target_property( cmake_property_automoc_macro_names ${target_obj} AUTOMOC_MACRO_NAMES )
    get_target_property( cmake_property_automoc_moc_options ${target_obj} AUTOMOC_MOC_OPTIONS )
    get_target_property( cmake_property_automoc_path_prefix ${target_obj} AUTOMOC_PATH_PREFIX )
    get_target_property( cmake_property_autorcc ${target_obj} AUTORCC )
    get_target_property( cmake_property_autorcc_executable ${target_obj} AUTORCC_EXECUTABLE )
    get_target_property( cmake_property_autorcc_options ${target_obj} AUTORCC_OPTIONS )
    get_target_property( cmake_property_autouic ${target_obj} AUTOUIC )
    get_target_property( cmake_property_autouic_executable ${target_obj} AUTOUIC_EXECUTABLE )
    get_target_property( cmake_property_autouic_options ${target_obj} AUTOUIC_OPTIONS )
    get_target_property( cmake_property_autouic_search_paths ${target_obj} AUTOUIC_SEARCH_PATHS )
    get_target_property( cmake_property_binary_dir ${target_obj} BINARY_DIR )
    get_target_property( cmake_property_build_rpath ${target_obj} BUILD_RPATH )
    get_target_property( cmake_property_build_rpath_use_origin ${target_obj} BUILD_RPATH_USE_ORIGIN )
    get_target_property( cmake_property_build_with_install_name_dir ${target_obj} BUILD_WITH_INSTALL_NAME_DIR )
    get_target_property( cmake_property_build_with_install_rpath ${target_obj} BUILD_WITH_INSTALL_RPATH )
    get_target_property( cmake_property_bundle ${target_obj} BUNDLE )
    get_target_property( cmake_property_bundle_extension ${target_obj} BUNDLE_EXTENSION )
    get_target_property( cmake_property_c_extensions ${target_obj} C_EXTENSIONS )
    get_target_property( cmake_property_c_standard ${target_obj} C_STANDARD )
    get_target_property( cmake_property_c_standard_required ${target_obj} C_STANDARD_REQUIRED )
    get_target_property( cmake_property_common_language_runtime ${target_obj} COMMON_LANGUAGE_RUNTIME )
    get_target_property( cmake_property_compatible_interface_bool ${target_obj} COMPATIBLE_INTERFACE_BOOL )
    get_target_property( cmake_property_compatible_interface_number_max ${target_obj} COMPATIBLE_INTERFACE_NUMBER_MAX )
    get_target_property( cmake_property_compatible_interface_number_min ${target_obj} COMPATIBLE_INTERFACE_NUMBER_MIN )
    get_target_property( cmake_property_compatible_interface_string ${target_obj} COMPATIBLE_INTERFACE_STRING )
    get_target_property( cmake_property_compile_definitions ${target_obj} COMPILE_DEFINITIONS )
    get_target_property( cmake_property_compile_features ${target_obj} COMPILE_FEATURES )
    get_target_property( cmake_property_compile_flags ${target_obj} COMPILE_FLAGS )
    get_target_property( cmake_property_compile_options ${target_obj} COMPILE_OPTIONS )
    get_target_property( cmake_property_compile_pdb_name ${target_obj} COMPILE_PDB_NAME )
    get_target_property( cmake_property_compile_pdb_output_directory ${target_obj} COMPILE_PDB_OUTPUT_DIRECTORY )
    get_target_property( cmake_property_compile_warning_as_error ${target_obj} COMPILE_WARNING_AS_ERROR )
    get_target_property( cmake_property_crosscompiling_emulator ${target_obj} CROSSCOMPILING_EMULATOR )
    get_target_property( cmake_property_cuda_architectures ${target_obj} CUDA_ARCHITECTURES )
    get_target_property( cmake_property_cuda_cubin_compilation ${target_obj} CUDA_CUBIN_COMPILATION )
    get_target_property( cmake_property_cuda_extensions ${target_obj} CUDA_EXTENSIONS )
    get_target_property( cmake_property_cuda_fatbin_compilation ${target_obj} CUDA_FATBIN_COMPILATION )
    get_target_property( cmake_property_cuda_optix_compilation ${target_obj} CUDA_OPTIX_COMPILATION )
    get_target_property( cmake_property_cuda_ptx_compilation ${target_obj} CUDA_PTX_COMPILATION )
    get_target_property( cmake_property_cuda_resolve_device_symbols ${target_obj} CUDA_RESOLVE_DEVICE_SYMBOLS )
    get_target_property( cmake_property_cuda_runtime_library ${target_obj} CUDA_RUNTIME_LIBRARY )
    get_target_property( cmake_property_cuda_separable_compilation ${target_obj} CUDA_SEPARABLE_COMPILATION )
    get_target_property( cmake_property_cuda_standard ${target_obj} CUDA_STANDARD )
    get_target_property( cmake_property_cuda_standard_required ${target_obj} CUDA_STANDARD_REQUIRED )
    get_target_property( cmake_property_cxx_extensions ${target_obj} CXX_EXTENSIONS )
    get_target_property( cmake_property_cxx_module_dirs ${target_obj} CXX_MODULE_DIRS )
    get_target_property( cmake_property_cxx_module_set ${target_obj} CXX_MODULE_SET )
    get_target_property( cmake_property_cxx_module_sets ${target_obj} CXX_MODULE_SETS )
    get_target_property( cmake_property_cxx_module_std ${target_obj} CXX_MODULE_STD )
    get_target_property( cmake_property_cxx_scan_for_modules ${target_obj} CXX_SCAN_FOR_MODULES )
    get_target_property( cmake_property_cxx_standard ${target_obj} CXX_STANDARD )
    get_target_property( cmake_property_cxx_standard_required ${target_obj} CXX_STANDARD_REQUIRED )
    get_target_property( cmake_property_debug_postfix ${target_obj} DEBUG_POSTFIX )
    get_target_property( cmake_property_define_symbol ${target_obj} DEFINE_SYMBOL )
    get_target_property( cmake_property_deployment_additional_files ${target_obj} DEPLOYMENT_ADDITIONAL_FILES )
    get_target_property( cmake_property_deployment_remote_directory ${target_obj} DEPLOYMENT_REMOTE_DIRECTORY )
    get_target_property( cmake_property_deprecation ${target_obj} DEPRECATION )
    get_target_property( cmake_property_disable_precompile_headers ${target_obj} DISABLE_PRECOMPILE_HEADERS )
    get_target_property( cmake_property_dll_name_with_soversion ${target_obj} DLL_NAME_WITH_SOVERSION )
    get_target_property( cmake_property_dotnet_sdk ${target_obj} DOTNET_SDK )
    get_target_property( cmake_property_dotnet_target_framework ${target_obj} DOTNET_TARGET_FRAMEWORK )
    get_target_property( cmake_property_dotnet_target_framework_version ${target_obj} DOTNET_TARGET_FRAMEWORK_VERSION )
    get_target_property( cmake_property_echostring ${target_obj} EchoString )
    get_target_property( cmake_property_enable_exports ${target_obj} ENABLE_EXPORTS )
    get_target_property( cmake_property_exclude_from_all ${target_obj} EXCLUDE_FROM_ALL )
    get_target_property( cmake_property_exclude_from_default_build ${target_obj} EXCLUDE_FROM_DEFAULT_BUILD )
    get_target_property( cmake_property_export_build_database ${target_obj} EXPORT_BUILD_DATABASE )
    get_target_property( cmake_property_export_compile_commands ${target_obj} EXPORT_COMPILE_COMMANDS )
    get_target_property( cmake_property_export_find_package_name ${target_obj} EXPORT_FIND_PACKAGE_NAME )
    get_target_property( cmake_property_export_name ${target_obj} EXPORT_NAME )
    get_target_property( cmake_property_export_no_system ${target_obj} EXPORT_NO_SYSTEM )
    get_target_property( cmake_property_export_properties ${target_obj} EXPORT_PROPERTIES )
    get_target_property( cmake_property_folder ${target_obj} FOLDER )
    get_target_property( cmake_property_fortran_building_instrinsic_modules ${target_obj} Fortran_BUILDING_INSTRINSIC_MODULES )
    get_target_property( cmake_property_fortran_format ${target_obj} Fortran_FORMAT )
    get_target_property( cmake_property_fortran_module_directory ${target_obj} Fortran_MODULE_DIRECTORY )
    get_target_property( cmake_property_fortran_preprocess ${target_obj} Fortran_PREPROCESS )
    get_target_property( cmake_property_framework ${target_obj} FRAMEWORK )
    get_target_property( cmake_property_framework_version ${target_obj} FRAMEWORK_VERSION )
    get_target_property( cmake_property_generator_file_name ${target_obj} GENERATOR_FILE_NAME )
    get_target_property( cmake_property_ghs_integrity_app ${target_obj} GHS_INTEGRITY_APP )
    get_target_property( cmake_property_ghs_no_source_group_file ${target_obj} GHS_NO_SOURCE_GROUP_FILE )
    get_target_property( cmake_property_gnutoms ${target_obj} GNUtoMS )
    get_target_property( cmake_property_has_cxx ${target_obj} HAS_CXX )
    get_target_property( cmake_property_header_dirs ${target_obj} HEADER_DIRS )
    get_target_property( cmake_property_header_set ${target_obj} HEADER_SET )
    get_target_property( cmake_property_header_sets ${target_obj} HEADER_SETS )
    get_target_property( cmake_property_hip_architectures ${target_obj} HIP_ARCHITECTURES )
    get_target_property( cmake_property_hip_extensions ${target_obj} HIP_EXTENSIONS )
    get_target_property( cmake_property_hip_standard ${target_obj} HIP_STANDARD )
    get_target_property( cmake_property_hip_standard_required ${target_obj} HIP_STANDARD_REQUIRED )
    get_target_property( cmake_property_implicit_depends_include_transform ${target_obj} IMPLICIT_DEPENDS_INCLUDE_TRANSFORM )
    get_target_property( cmake_property_imported ${target_obj} IMPORTED )
    get_target_property( cmake_property_imported_common_language_runtime ${target_obj} IMPORTED_COMMON_LANGUAGE_RUNTIME )
    get_target_property( cmake_property_imported_configurations ${target_obj} IMPORTED_CONFIGURATIONS )
    get_target_property( cmake_property_imported_cxx_modules_compile_definitions ${target_obj} IMPORTED_CXX_MODULES_COMPILE_DEFINITIONS )
    get_target_property( cmake_property_imported_cxx_modules_compile_features ${target_obj} IMPORTED_CXX_MODULES_COMPILE_FEATURES )
    get_target_property( cmake_property_imported_cxx_modules_compile_options ${target_obj} IMPORTED_CXX_MODULES_COMPILE_OPTIONS )
    get_target_property( cmake_property_imported_cxx_modules_include_directories ${target_obj} IMPORTED_CXX_MODULES_INCLUDE_DIRECTORIES )
    get_target_property( cmake_property_imported_cxx_modules_link_libraries ${target_obj} IMPORTED_CXX_MODULES_LINK_LIBRARIES )
    get_target_property( cmake_property_imported_global ${target_obj} IMPORTED_GLOBAL )
    get_target_property( cmake_property_imported_implib ${target_obj} IMPORTED_IMPLIB )
    get_target_property( cmake_property_imported_libname ${target_obj} IMPORTED_LIBNAME )
    get_target_property( cmake_property_imported_link_dependent_libraries ${target_obj} IMPORTED_LINK_DEPENDENT_LIBRARIES )
    get_target_property( cmake_property_imported_link_interface_languages ${target_obj} IMPORTED_LINK_INTERFACE_LANGUAGES )
    get_target_property( cmake_property_imported_link_interface_libraries ${target_obj} IMPORTED_LINK_INTERFACE_LIBRARIES )
    get_target_property( cmake_property_imported_link_interface_multiplicity ${target_obj} IMPORTED_LINK_INTERFACE_MULTIPLICITY )
    get_target_property( cmake_property_imported_no_soname ${target_obj} IMPORTED_NO_SONAME )
    get_target_property( cmake_property_imported_objects ${target_obj} IMPORTED_OBJECTS )
    get_target_property( cmake_property_imported_soname ${target_obj} IMPORTED_SONAME )
    get_target_property( cmake_property_import_prefix ${target_obj} IMPORT_PREFIX )
    get_target_property( cmake_property_import_suffix ${target_obj} IMPORT_SUFFIX )
    get_target_property( cmake_property_include_directories ${target_obj} INCLUDE_DIRECTORIES )
    get_target_property( cmake_property_install_name_dir ${target_obj} INSTALL_NAME_DIR )
    get_target_property( cmake_property_install_remove_environment_rpath ${target_obj} INSTALL_REMOVE_ENVIRONMENT_RPATH )
    get_target_property( cmake_property_install_rpath ${target_obj} INSTALL_RPATH )
    get_target_property( cmake_property_install_rpath_use_link_path ${target_obj} INSTALL_RPATH_USE_LINK_PATH )
    get_target_property( cmake_property_interface_automoc_macro_names ${target_obj} INTERFACE_AUTOMOC_MACRO_NAMES )
    get_target_property( cmake_property_interface_autouic_options ${target_obj} INTERFACE_AUTOUIC_OPTIONS )
    get_target_property( cmake_property_interface_compile_definitions ${target_obj} INTERFACE_COMPILE_DEFINITIONS )
    get_target_property( cmake_property_interface_compile_features ${target_obj} INTERFACE_COMPILE_FEATURES )
    get_target_property( cmake_property_interface_compile_options ${target_obj} INTERFACE_COMPILE_OPTIONS )
    get_target_property( cmake_property_interface_cxx_module_sets ${target_obj} INTERFACE_CXX_MODULE_SETS )
    get_target_property( cmake_property_interface_header_sets ${target_obj} INTERFACE_HEADER_SETS )
    get_target_property( cmake_property_interface_header_sets_to_verify ${target_obj} INTERFACE_HEADER_SETS_TO_VERIFY )
    get_target_property( cmake_property_interface_include_directories ${target_obj} INTERFACE_INCLUDE_DIRECTORIES )
    get_target_property( cmake_property_interface_link_depends ${target_obj} INTERFACE_LINK_DEPENDS )
    get_target_property( cmake_property_interface_link_directories ${target_obj} INTERFACE_LINK_DIRECTORIES )
    get_target_property( cmake_property_interface_link_libraries ${target_obj} INTERFACE_LINK_LIBRARIES )
    get_target_property( cmake_property_interface_link_libraries_direct ${target_obj} INTERFACE_LINK_LIBRARIES_DIRECT )
    get_target_property( cmake_property_interface_link_libraries_direct_exclude ${target_obj} INTERFACE_LINK_LIBRARIES_DIRECT_EXCLUDE )
    get_target_property( cmake_property_interface_link_options ${target_obj} INTERFACE_LINK_OPTIONS )
    get_target_property( cmake_property_interface_position_independent_code ${target_obj} INTERFACE_POSITION_INDEPENDENT_CODE )
    get_target_property( cmake_property_interface_precompile_headers ${target_obj} INTERFACE_PRECOMPILE_HEADERS )
    get_target_property( cmake_property_interface_sources ${target_obj} INTERFACE_SOURCES )
    get_target_property( cmake_property_interface_system_include_directories ${target_obj} INTERFACE_SYSTEM_INCLUDE_DIRECTORIES )
    get_target_property( cmake_property_interprocedural_optimization ${target_obj} INTERPROCEDURAL_OPTIMIZATION )
    get_target_property( cmake_property_ispc_header_directory ${target_obj} ISPC_HEADER_DIRECTORY )
    get_target_property( cmake_property_ispc_header_suffix ${target_obj} ISPC_HEADER_SUFFIX )
    get_target_property( cmake_property_ispc_instruction_sets ${target_obj} ISPC_INSTRUCTION_SETS )
    get_target_property( cmake_property_job_pool_compile ${target_obj} JOB_POOL_COMPILE )
    get_target_property( cmake_property_job_pool_link ${target_obj} JOB_POOL_LINK )
    get_target_property( cmake_property_job_pool_precompile_header ${target_obj} JOB_POOL_PRECOMPILE_HEADER )
    get_target_property( cmake_property_labels ${target_obj} LABELS )
    get_target_property( cmake_property_library_output_directory ${target_obj} LIBRARY_OUTPUT_DIRECTORY )
    get_target_property( cmake_property_library_output_name ${target_obj} LIBRARY_OUTPUT_NAME )
    get_target_property( cmake_property_link_depends ${target_obj} LINK_DEPENDS )
    get_target_property( cmake_property_link_depends_no_shared ${target_obj} LINK_DEPENDS_NO_SHARED )
    get_target_property( cmake_property_link_directories ${target_obj} LINK_DIRECTORIES )
    get_target_property( cmake_property_link_flags ${target_obj} LINK_FLAGS )
    get_target_property( cmake_property_link_interface_libraries ${target_obj} LINK_INTERFACE_LIBRARIES )
    get_target_property( cmake_property_link_interface_multiplicity ${target_obj} LINK_INTERFACE_MULTIPLICITY )
    get_target_property( cmake_property_link_libraries ${target_obj} LINK_LIBRARIES )
    get_target_property( cmake_property_link_libraries_only_targets ${target_obj} LINK_LIBRARIES_ONLY_TARGETS )
    get_target_property( cmake_property_link_libraries_strategy ${target_obj} LINK_LIBRARIES_STRATEGY )
    get_target_property( cmake_property_link_library_override ${target_obj} LINK_LIBRARY_OVERRIDE )
    get_target_property( cmake_property_link_options ${target_obj} LINK_OPTIONS )
    get_target_property( cmake_property_link_search_end_static ${target_obj} LINK_SEARCH_END_STATIC )
    get_target_property( cmake_property_link_search_start_static ${target_obj} LINK_SEARCH_START_STATIC )
    get_target_property( cmake_property_link_what_you_use ${target_obj} LINK_WHAT_YOU_USE )
    get_target_property( cmake_property_linker_language ${target_obj} LINKER_LANGUAGE )
    get_target_property( cmake_property_linker_type ${target_obj} LINKER_TYPE )
    get_target_property( cmake_property_macho_compatibility_version ${target_obj} MACHO_COMPATIBILITY_VERSION )
    get_target_property( cmake_property_macho_current_version ${target_obj} MACHO_CURRENT_VERSION )
    get_target_property( cmake_property_macosx_bundle ${target_obj} MACOSX_BUNDLE )
    get_target_property( cmake_property_macosx_bundle_info_plist ${target_obj} MACOSX_BUNDLE_INFO_PLIST )
    get_target_property( cmake_property_macosx_framework_info_plist ${target_obj} MACOSX_FRAMEWORK_INFO_PLIST )
    get_target_property( cmake_property_macosx_rpath ${target_obj} MACOSX_RPATH )
    get_target_property( cmake_property_manually_added_dependencies ${target_obj} MANUALLY_ADDED_DEPENDENCIES )
    get_target_property( cmake_property_msvc_debug_information_format ${target_obj} MSVC_DEBUG_INFORMATION_FORMAT )
    get_target_property( cmake_property_msvc_runtime_library ${target_obj} MSVC_RUNTIME_LIBRARY )
    get_target_property( cmake_property_name ${target_obj} NAME )
    get_target_property( cmake_property_no_soname ${target_obj} NO_SONAME )
    get_target_property( cmake_property_no_system_from_imported ${target_obj} NO_SYSTEM_FROM_IMPORTED )
    get_target_property( cmake_property_objc_extensions ${target_obj} OBJC_EXTENSIONS )
    get_target_property( cmake_property_objc_standard ${target_obj} OBJC_STANDARD )
    get_target_property( cmake_property_objc_standard_required ${target_obj} OBJC_STANDARD_REQUIRED )
    get_target_property( cmake_property_objcxx_extensions ${target_obj} OBJCXX_EXTENSIONS )
    get_target_property( cmake_property_objcxx_standard ${target_obj} OBJCXX_STANDARD )
    get_target_property( cmake_property_objcxx_standard_required ${target_obj} OBJCXX_STANDARD_REQUIRED )
    get_target_property( cmake_property_optimize_dependencies ${target_obj} OPTIMIZE_DEPENDENCIES )
    get_target_property( cmake_property_osx_architectures ${target_obj} OSX_ARCHITECTURES )
    get_target_property( cmake_property_output_name ${target_obj} OUTPUT_NAME )
    get_target_property( cmake_property_pch_instantiate_templates ${target_obj} PCH_INSTANTIATE_TEMPLATES )
    get_target_property( cmake_property_pch_warn_invalid ${target_obj} PCH_WARN_INVALID )
    get_target_property( cmake_property_pdb_name ${target_obj} PDB_NAME )
    get_target_property( cmake_property_pdb_output_directory ${target_obj} PDB_OUTPUT_DIRECTORY )
    get_target_property( cmake_property_position_independent_code ${target_obj} POSITION_INDEPENDENT_CODE )
    get_target_property( cmake_property_precompile_headers ${target_obj} PRECOMPILE_HEADERS )
    get_target_property( cmake_property_precompile_headers_reuse_from ${target_obj} PRECOMPILE_HEADERS_REUSE_FROM )
    get_target_property( cmake_property_prefix ${target_obj} PREFIX )
    get_target_property( cmake_property_private_header ${target_obj} PRIVATE_HEADER )
    get_target_property( cmake_property_project_label ${target_obj} PROJECT_LABEL )
    get_target_property( cmake_property_public_header ${target_obj} PUBLIC_HEADER )
    get_target_property( cmake_property_resource ${target_obj} RESOURCE )
    get_target_property( cmake_property_rule_launch_compile ${target_obj} RULE_LAUNCH_COMPILE )
    get_target_property( cmake_property_rule_launch_custom ${target_obj} RULE_LAUNCH_CUSTOM )
    get_target_property( cmake_property_rule_launch_link ${target_obj} RULE_LAUNCH_LINK )
    get_target_property( cmake_property_runtime_output_directory ${target_obj} RUNTIME_OUTPUT_DIRECTORY )
    get_target_property( cmake_property_runtime_output_name ${target_obj} RUNTIME_OUTPUT_NAME )
    get_target_property( cmake_property_skip_build_rpath ${target_obj} SKIP_BUILD_RPATH )
    get_target_property( cmake_property_source_dir ${target_obj} SOURCE_DIR )
    get_target_property( cmake_property_sources ${target_obj} SOURCES )
    get_target_property( cmake_property_soversion ${target_obj} SOVERSION )
    get_target_property( cmake_property_static_library_flags ${target_obj} STATIC_LIBRARY_FLAGS )
    get_target_property( cmake_property_static_library_options ${target_obj} STATIC_LIBRARY_OPTIONS )
    get_target_property( cmake_property_suffix ${target_obj} SUFFIX )
    get_target_property( cmake_property_swift_compilation_mode ${target_obj} Swift_COMPILATION_MODE )
    get_target_property( cmake_property_swift_dependencies_file ${target_obj} Swift_DEPENDENCIES_FILE )
    get_target_property( cmake_property_swift_language_version ${target_obj} Swift_LANGUAGE_VERSION )
    get_target_property( cmake_property_swift_module_directory ${target_obj} Swift_MODULE_DIRECTORY )
    get_target_property( cmake_property_swift_module_name ${target_obj} Swift_MODULE_NAME )
    get_target_property( cmake_property_system ${target_obj} SYSTEM )
    get_target_property( cmake_property_test_launcher ${target_obj} TEST_LAUNCHER )
    get_target_property( cmake_property_transitive_compile_properties ${target_obj} TRANSITIVE_COMPILE_PROPERTIES )
    get_target_property( cmake_property_transitive_link_properties ${target_obj} TRANSITIVE_LINK_PROPERTIES )
    get_target_property( cmake_property_type ${target_obj} TYPE )
    get_target_property( cmake_property_unity_build ${target_obj} UNITY_BUILD )
    get_target_property( cmake_property_unity_build_batch_size ${target_obj} UNITY_BUILD_BATCH_SIZE )
    get_target_property( cmake_property_unity_build_code_after_include ${target_obj} UNITY_BUILD_CODE_AFTER_INCLUDE )
    get_target_property( cmake_property_unity_build_code_before_include ${target_obj} UNITY_BUILD_CODE_BEFORE_INCLUDE )
    get_target_property( cmake_property_unity_build_mode ${target_obj} UNITY_BUILD_MODE )
    get_target_property( cmake_property_unity_build_unique_id ${target_obj} UNITY_BUILD_UNIQUE_ID )
    get_target_property( cmake_property_verify_interface_header_sets ${target_obj} VERIFY_INTERFACE_HEADER_SETS )
    get_target_property( cmake_property_version ${target_obj} VERSION )
    get_target_property( cmake_property_visibility_inlines_hidden ${target_obj} VISIBILITY_INLINES_HIDDEN )
    get_target_property( cmake_property_vs_configuration_type ${target_obj} VS_CONFIGURATION_TYPE )
    get_target_property( cmake_property_vs_debugger_command ${target_obj} VS_DEBUGGER_COMMAND )
    get_target_property( cmake_property_vs_debugger_command_arguments ${target_obj} VS_DEBUGGER_COMMAND_ARGUMENTS )
    get_target_property( cmake_property_vs_debugger_environment ${target_obj} VS_DEBUGGER_ENVIRONMENT )
    get_target_property( cmake_property_vs_debugger_working_directory ${target_obj} VS_DEBUGGER_WORKING_DIRECTORY )
    get_target_property( cmake_property_vs_desktop_extensions_version ${target_obj} VS_DESKTOP_EXTENSIONS_VERSION )
    get_target_property( cmake_property_vs_dotnet_documentation_file ${target_obj} VS_DOTNET_DOCUMENTATION_FILE )
    get_target_property( cmake_property_vs_dotnet_references ${target_obj} VS_DOTNET_REFERENCES )
    get_target_property( cmake_property_vs_dotnet_references_copy_local ${target_obj} VS_DOTNET_REFERENCES_COPY_LOCAL )
    get_target_property( cmake_property_vs_dotnet_startup_object ${target_obj} VS_DOTNET_STARTUP_OBJECT )
    get_target_property( cmake_property_vs_dotnet_target_framework_version ${target_obj} VS_DOTNET_TARGET_FRAMEWORK_VERSION )
    get_target_property( cmake_property_vs_dpi_aware ${target_obj} VS_DPI_AWARE )
    get_target_property( cmake_property_vs_framework_references ${target_obj} VS_FRAMEWORK_REFERENCES )
    get_target_property( cmake_property_vs_global_keyword ${target_obj} VS_GLOBAL_KEYWORD )
    get_target_property( cmake_property_vs_global_project_types ${target_obj} VS_GLOBAL_PROJECT_TYPES )
    get_target_property( cmake_property_vs_global_rootnamespace ${target_obj} VS_GLOBAL_ROOTNAMESPACE )
    get_target_property( cmake_property_vs_iot_extensions_version ${target_obj} VS_IOT_EXTENSIONS_VERSION )
    get_target_property( cmake_property_vs_iot_startup_task ${target_obj} VS_IOT_STARTUP_TASK )
    get_target_property( cmake_property_vs_just_my_code_debugging ${target_obj} VS_JUST_MY_CODE_DEBUGGING )
    get_target_property( cmake_property_vs_keyword ${target_obj} VS_KEYWORD )
    get_target_property( cmake_property_vs_mobile_extensions_version ${target_obj} VS_MOBILE_EXTENSIONS_VERSION )
    get_target_property( cmake_property_vs_no_compile_batching ${target_obj} VS_NO_COMPILE_BATCHING )
    get_target_property( cmake_property_vs_no_solution_deploy ${target_obj} VS_NO_SOLUTION_DEPLOY )
    get_target_property( cmake_property_vs_package_references ${target_obj} VS_PACKAGE_REFERENCES )
    get_target_property( cmake_property_vs_platform_toolset ${target_obj} VS_PLATFORM_TOOLSET )
    get_target_property( cmake_property_vs_project_import ${target_obj} VS_PROJECT_IMPORT )
    get_target_property( cmake_property_vs_scc_auxpath ${target_obj} VS_SCC_AUXPATH )
    get_target_property( cmake_property_vs_scc_localpath ${target_obj} VS_SCC_LOCALPATH )
    get_target_property( cmake_property_vs_scc_projectname ${target_obj} VS_SCC_PROJECTNAME )
    get_target_property( cmake_property_vs_scc_provider ${target_obj} VS_SCC_PROVIDER )
    get_target_property( cmake_property_vs_sdk_references ${target_obj} VS_SDK_REFERENCES )
    get_target_property( cmake_property_vs_solution_deploy ${target_obj} VS_SOLUTION_DEPLOY )
    get_target_property( cmake_property_vs_use_debug_libraries ${target_obj} VS_USE_DEBUG_LIBRARIES )
    get_target_property( cmake_property_vs_user_props ${target_obj} VS_USER_PROPS )
    get_target_property( cmake_property_vs_filter_props ${target_obj} VS_FILTER_PROPS )
    get_target_property( cmake_property_vs_windows_target_platform_min_version ${target_obj} VS_WINDOWS_TARGET_PLATFORM_MIN_VERSION )
    get_target_property( cmake_property_vs_winrt_component ${target_obj} VS_WINRT_COMPONENT )
    get_target_property( cmake_property_vs_winrt_references ${target_obj} VS_WINRT_REFERENCES )
    get_target_property( cmake_property_watcom_runtime_library ${target_obj} WATCOM_RUNTIME_LIBRARY )
    get_target_property( cmake_property_win32_executable ${target_obj} WIN32_EXECUTABLE )
    get_target_property( cmake_property_windows_export_all_symbols ${target_obj} WINDOWS_EXPORT_ALL_SYMBOLS )
    get_target_property( cmake_property_xcode_embed_frameworks_code_sign_on_copy ${target_obj} XCODE_EMBED_FRAMEWORKS_CODE_SIGN_ON_COPY )
    get_target_property( cmake_property_xcode_embed_frameworks_remove_headers_on_copy ${target_obj} XCODE_EMBED_FRAMEWORKS_REMOVE_HEADERS_ON_COPY )
    get_target_property( cmake_property_xcode_explicit_file_type ${target_obj} XCODE_EXPLICIT_FILE_TYPE )
    get_target_property( cmake_property_xcode_generate_scheme ${target_obj} XCODE_GENERATE_SCHEME )
    get_target_property( cmake_property_xcode_link_build_phase_mode ${target_obj} XCODE_LINK_BUILD_PHASE_MODE )
    get_target_property( cmake_property_xcode_product_type ${target_obj} XCODE_PRODUCT_TYPE )
    get_target_property( cmake_property_xcode_scheme_address_sanitizer ${target_obj} XCODE_SCHEME_ADDRESS_SANITIZER )
    get_target_property( cmake_property_xcode_scheme_address_sanitizer_use_after_return ${target_obj} XCODE_SCHEME_ADDRESS_SANITIZER_USE_AFTER_RETURN )
    get_target_property( cmake_property_xcode_scheme_arguments ${target_obj} XCODE_SCHEME_ARGUMENTS )
    get_target_property( cmake_property_xcode_scheme_debug_as_root ${target_obj} XCODE_SCHEME_DEBUG_AS_ROOT )
    get_target_property( cmake_property_xcode_scheme_debug_document_versioning ${target_obj} XCODE_SCHEME_DEBUG_DOCUMENT_VERSIONING )
    get_target_property( cmake_property_xcode_scheme_disable_main_thread_checker ${target_obj} XCODE_SCHEME_DISABLE_MAIN_THREAD_CHECKER )
    get_target_property( cmake_property_xcode_scheme_dynamic_library_loads ${target_obj} XCODE_SCHEME_DYNAMIC_LIBRARY_LOADS )
    get_target_property( cmake_property_xcode_scheme_dynamic_linker_api_usage ${target_obj} XCODE_SCHEME_DYNAMIC_LINKER_API_USAGE )
    get_target_property( cmake_property_xcode_scheme_enable_gpu_api_validation ${target_obj} XCODE_SCHEME_ENABLE_GPU_API_VALIDATION )
    get_target_property( cmake_property_xcode_scheme_enable_gpu_frame_capture_mode ${target_obj} XCODE_SCHEME_ENABLE_GPU_FRAME_CAPTURE_MODE )
    get_target_property( cmake_property_xcode_scheme_enable_gpu_shader_validation ${target_obj} XCODE_SCHEME_ENABLE_GPU_SHADER_VALIDATION )
    get_target_property( cmake_property_xcode_scheme_environment ${target_obj} XCODE_SCHEME_ENVIRONMENT )
    get_target_property( cmake_property_xcode_scheme_executable ${target_obj} XCODE_SCHEME_EXECUTABLE )
    get_target_property( cmake_property_xcode_scheme_guard_malloc ${target_obj} XCODE_SCHEME_GUARD_MALLOC )
    get_target_property( cmake_property_xcode_scheme_launch_configuration ${target_obj} XCODE_SCHEME_LAUNCH_CONFIGURATION )
    get_target_property( cmake_property_xcode_scheme_launch_mode ${target_obj} XCODE_SCHEME_LAUNCH_MODE )
    get_target_property( cmake_property_xcode_scheme_main_thread_checker_stop ${target_obj} XCODE_SCHEME_MAIN_THREAD_CHECKER_STOP )
    get_target_property( cmake_property_xcode_scheme_malloc_guard_edges ${target_obj} XCODE_SCHEME_MALLOC_GUARD_EDGES )
    get_target_property( cmake_property_xcode_scheme_malloc_scribble ${target_obj} XCODE_SCHEME_MALLOC_SCRIBBLE )
    get_target_property( cmake_property_xcode_scheme_malloc_stack ${target_obj} XCODE_SCHEME_MALLOC_STACK )
    get_target_property( cmake_property_xcode_scheme_thread_sanitizer ${target_obj} XCODE_SCHEME_THREAD_SANITIZER )
    get_target_property( cmake_property_xcode_scheme_thread_sanitizer_stop ${target_obj} XCODE_SCHEME_THREAD_SANITIZER_STOP )
    get_target_property( cmake_property_xcode_scheme_undefined_behaviour_sanitizer ${target_obj} XCODE_SCHEME_UNDEFINED_BEHAVIOUR_SANITIZER )
    get_target_property( cmake_property_xcode_scheme_undefined_behaviour_sanitizer_stop ${target_obj} XCODE_SCHEME_UNDEFINED_BEHAVIOUR_SANITIZER_STOP )
    get_target_property( cmake_property_xcode_scheme_working_directory ${target_obj} XCODE_SCHEME_WORKING_DIRECTORY )
    get_target_property( cmake_property_xcode_scheme_zombie_objects ${target_obj} XCODE_SCHEME_ZOMBIE_OBJECTS )
    get_target_property( cmake_property_xcode_xcconfig ${target_obj} XCODE_XCCONFIG )
    get_target_property( cmake_property_xctest ${target_obj} XCTEST )
    get_target_property( cmake_property_attached_files ${target_obj} ATTACHED_FILES )
    get_target_property( cmake_property_attached_files_on_fail ${target_obj} ATTACHED_FILES_ON_FAIL )
    get_target_property( cmake_property_cost ${target_obj} COST )
    get_target_property( cmake_property_depends ${target_obj} DEPENDS )
    get_target_property( cmake_property_disabled ${target_obj} DISABLED )
    get_target_property( cmake_property_environment ${target_obj} ENVIRONMENT )
    get_target_property( cmake_property_environment_modification ${target_obj} ENVIRONMENT_MODIFICATION )
    get_target_property( cmake_property_fail_regular_expression ${target_obj} FAIL_REGULAR_EXPRESSION )
    get_target_property( cmake_property_fixtures_cleanup ${target_obj} FIXTURES_CLEANUP )
    get_target_property( cmake_property_fixtures_required ${target_obj} FIXTURES_REQUIRED )
    get_target_property( cmake_property_fixtures_setup ${target_obj} FIXTURES_SETUP )
    get_target_property( cmake_property_generated_resource_spec_file ${target_obj} GENERATED_RESOURCE_SPEC_FILE )
    get_target_property( cmake_property_labels ${target_obj} LABELS )
    get_target_property( cmake_property_measurement ${target_obj} MEASUREMENT )
    get_target_property( cmake_property_pass_regular_expression ${target_obj} PASS_REGULAR_EXPRESSION )
    get_target_property( cmake_property_processor_affinity ${target_obj} PROCESSOR_AFFINITY )
    get_target_property( cmake_property_processors ${target_obj} PROCESSORS )
    get_target_property( cmake_property_required_files ${target_obj} REQUIRED_FILES )
    get_target_property( cmake_property_resource_groups ${target_obj} RESOURCE_GROUPS )
    get_target_property( cmake_property_resource_lock ${target_obj} RESOURCE_LOCK )
    get_target_property( cmake_property_run_serial ${target_obj} RUN_SERIAL )
    get_target_property( cmake_property_skip_regular_expression ${target_obj} SKIP_REGULAR_EXPRESSION )
    get_target_property( cmake_property_skip_return_code ${target_obj} SKIP_RETURN_CODE )
    get_target_property( cmake_property_timeout ${target_obj} TIMEOUT )
    get_target_property( cmake_property_timeout_after_match ${target_obj} TIMEOUT_AFTER_MATCH )
    get_target_property( cmake_property_timeout_signal_grace_period ${target_obj} TIMEOUT_SIGNAL_GRACE_PERIOD )
    get_target_property( cmake_property_timeout_signal_name ${target_obj} TIMEOUT_SIGNAL_NAME )
    get_target_property( cmake_property_will_fail ${target_obj} WILL_FAIL )
    get_target_property( cmake_property_working_directory ${target_obj} WORKING_DIRECTORY )

    set( rootPath "${CMAKE_CURRENT_FUNCTION_LIST_DIR}/../../temp/cmake_in" )
    configure_file( "${rootPath}/cmake_to_c_cpp_header_env.h.in" "${target_path}/cmake_to_c_cpp_header_env.h" ) # # 项目信息
    configure_file( "${rootPath}/cmake_property_to_c_cpp_header_env.h.in" "${target_path}/cmake_property_to_c_cpp_header_env.h" ) # # 项目信息
    configure_file( "${rootPath}/cmake_value_to_c_cpp_header_env.h.in" "${target_path}/cmake_value_to_c_cpp_header_env.h" ) # # 项目信息

    get_absolute_path( target_path "${target_path}/cmake_to_c_cpp_header_env.h" "${target_path}/cmake_property_to_c_cpp_header_env.h" "${target_path}/cmake_value_to_c_cpp_header_env.h" )
    set( ${generate_file_path} "${target_path}" PARENT_SCOPE )
endfunction()
